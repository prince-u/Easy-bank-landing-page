* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: inter;
}

:root {
    --dark-blue: hsl(233, 26%, 24%);
    --lime-green: hsl(136, 65%, 51%);
    --bright-cyan: hsl(192, 70%, 51%);
    --white: hsl(0, 0%, 100%);
    --grayish-blue: hsl(233, 8%, 62%);
    --light-grayish-blue: hsl(220, 16%, 96%);
    --very-light-gray: hsl(0, 0%, 98%);
    --1-rem: 16px;
    --container-padding-inline: clamp(0rem, 8.9vw, 7.5rem)
}

/* utility classes */
.dark-blue-txt {
    color: var(--dark-blue);
}

.grayish-blue-txt {
    color: var(--grayish-blue)
}

.fw-300 {
    font-weight: 300;
}

.fw-400 {
    font-weight: 400;
}

ul {
    list-style: none;
}

a {
    text-decoration: none;
}

html {
    overflow-x: hidden;
}

body {
    overflow-x: hidden;
}

.container {
    width: 100%;
    padding-inline: var(--container-padding-inline);
    position: relative;
}

.container1 {
    z-index: 20;
    background-color: var(--white);
}

.grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem 1rem;
}

nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1.2rem;
    padding-bottom: 1.2rem;
}

nav>ul.nav-links {
    display: flex;
    align-items: center;
    gap: 1.78vw;
}

nav>ul.nav-links>li {
    position: relative;
    color: var(--grayish-blue);
    transition: color 100ms linear;
    cursor: pointer;
}

nav>ul.nav-links>li:hover {
    color: var(--dark-blue)
}

nav>ul.nav-links>li::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 0;
    background: linear-gradient(to right, var(--lime-green), var(--bright-cyan));
    border-radius: .25rem .25rem 0 0;
    transition: height 100ms ease-out;
}

nav>ul.nav-links li:hover::before {
    height: .25rem;
}

@media screen and (min-width:717px) {
    nav>ul.nav-links>li::before {
        bottom: calc(-0.675rem - 1.2rem);
        /*-nav inner empty content space - nav padding*/
    }

}

@media screen and (max-width:716px) {
    nav>ul.nav-links>li::before {
        bottom: -2.375rem;
        /* - half the nav total height - half the nav links height*/
    }
}


nav>.hamburger-icon {
    display: none;
}

button.invite-btn {
    padding: .8rem 2rem;
    border-radius: 2rem;
    border: none;
    background: linear-gradient(to right, var(--lime-green), var(--bright-cyan));
    color: var(--white);
    width: max-content;
    font-weight: 600;
    transition:
        transform 300ms linear,
        filter 150ms linear;
    cursor: pointer;
}

button.invite-btn:hover {
    filter: brightness(115%);
}

button.invite-btn:active {
    transform: scale(.9);
}

.open-close {
    display: none;
}

.container2 {
    background-color: var(--very-light-gray);
    padding-top: clamp(5rem, 11.86vw, 10rem);
    padding-bottom: 10rem;
    height: 100vh;
    position: relative;
    z-index: 10;
}

.container2>main {
    width: 37%;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.container2>main>h1 {
    transform: translateX(-50%);
    opacity: 0;
    transition: transform ease-out 350ms,
        opacity ease-out .8s
}

.container2>main>p {
    transform: translateX(-50%);
    opacity: 0;
    transition: transform ease-out 350ms 150ms,
        opacity ease-out .8s 100ms
}

.container2>main>button {
    transform: translateX(-50%);
    opacity: 0;
    transition: transform ease-out 350ms 300ms,
        opacity ease-out .8s 200ms
}

.container2>main.show>h1,
.container2>main.show>p,
.container2>main.show>button {
    opacity: 1;
    transform: translateX(0);
}

.container2>main>h1 {
    font-size: 2.5rem;

}

.container2>main>p {
    line-height: 1.5;
}

.container2>.wavy-image {
    position: absolute;
    inset: 0;
    bottom: 2rem;
    overflow: hidden;
    pointer-events: none;
}

.container2>.wavy-image img {
    position: absolute;
    top: -16.5rem;
    right: -30rem;
    width: 94.5%;
    /* the width was calculated by dividing the width of the image(without an explicit width) and the width of the image container(which basically spans the entire page, since its position absolute and inset 0)  */
    /* A width was given to the image to enable it to shrink in size whenever the width of the page itself shrinked */
    /* note: the page must be at its full width to make these calculations */
}

.container2>.four-phones {
    position: absolute;
    inset: 0;
    pointer-events: none;
}

.container2>.four-phones>img {
    position: absolute;
    top: -8rem;
    right: -8.5rem;
    width: 56.86%
}

.container3 {
    min-height: 100vh;
    background-color: var(--light-grayish-blue);
    padding-block: 5rem;
}

.container3>main {
    margin-bottom: 5rem;

}

.container3>main>h1 {
    margin-bottom: 2rem;
    font-size: 2.5rem;

}

.container3>main>p {
    line-height: 1.5;

}

.container3>main>h1 {
    transform: translateX(-50%);
    opacity: 0;
    transition: transform ease-out 350ms,
        opacity ease-out .8s
}

.container3>main>p {
    transform: translateX(-50%);
    opacity: 0;
    transition: transform ease-out 350ms 150ms,
        opacity ease-out .8s 100ms
}

.container3>main.show>h1,
.container3>main.show>p {
    opacity: 1;
    transform: translateX(0);
}

.container3 .grid-item>.benefits-image img {
    transform: translateX(150%);
    opacity: 0;
}

.container3 .grid-item:nth-child(1)>.benefits-image>img {
    transition: transform ease-out 350ms,
        opacity ease-out .8s;
}

.container3 .grid-item:nth-child(2)>.benefits-image>img {
    transition: transform ease-out 350ms 100ms,
        opacity ease-out .8s 50ms;
}

.container3 .grid-item:nth-child(3)>.benefits-image>img {
    transition: transform ease-out 350ms 200ms,
        opacity ease-out .8s 100ms;
}

.container3 .grid-item:nth-child(4)>.benefits-image>img {
    transition: transform ease-out 350ms 300ms,
        opacity ease-out .8s 150ms;
}

.container3 .benefits-image.show img {
    opacity: 1;
    transform: translateX(0);
}

.container3>.benefits-grid h2 {
    margin-block: 1.5rem;
}

.container3>.benefits-grid p {
    line-height: 1.6;
}

.container4 {
    padding-block: 5rem;
    background-color: var(--very-light-gray);
    min-height: 100vh;
}

.container4>main>h1 {
    margin-bottom: 3rem;
}

.container4 .article>img {
    width: 100%;
    object-fit: cover;
    aspect-ratio: 1.1 / 1;
}

.container4 .article {
    overflow: hidden;
    border-radius: .25rem;
    background-color: var(--white);
}

.container4 .article>main {
    padding: 1.8rem;
    height: calc(52% - 3.6rem);
}

.container4 .author>p {
    font-size: .6rem;
}

.container4 .title>h2 {
    font-size: 1rem;
    padding-block: .5rem;
    transition: color 100ms linear;
}

.container4 .title>h2:hover {
    cursor: pointer;
    color: var(--lime-green)
}

.container4 .about>p {
    font-size: .8rem;
    line-height: 1.4;
}

footer {
    background-color: var(--dark-blue);
    display: flex;
    justify-content: space-between;
    padding-block: 3rem;
    gap: 2rem;
}

footer>.col1 {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

footer>.col1>.socials {
    display: flex;
    gap: .75rem;
}

footer>.col1>.socials>svg {
    cursor: pointer;
}

footer>.col1>.socials>svg path {
    transition: fill 100ms linear;
}

footer>.col1>.socials>svg:hover path {
    fill: var(--lime-green)
}

footer>.col2 {
    margin-right: minmax(11.86vw, 10rem);
}

footer>.col2>.footer-links {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    row-gap: .85rem;
    column-gap: 5.93vw;
}

footer>.col2 li {
    color: var(--white);
    font-size: .85rem;
    color: var(--light-grayish-blue);
    transition: color 100ms linear;
    cursor: pointer
}

footer>.col2 li:hover {
    color: var(--lime-green)
}

footer>.col3 {
    display: flex;
    flex-direction: column;
    align-items: end;
    gap: 1.75rem;
}

footer>.col3>.copyright {
    color: var(--grayish-blue);
}

@media screen and (max-width: 600px) {
    html.active {
        overflow-y: hidden;
    }

    .dark-overlay {
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 0;
        background-image: linear-gradient(var(--dark-blue) 10%, transparent);
        z-index: 100;
        transition: height ease-out 150ms;
    }

    .dark-overlay.active {
        height: 100vh;
    }

    .container {
        text-align: center;
    }

    .container1 {
        z-index: 100;
    }

    nav>button.invite-btn {
        display: none;
    }

    nav>ul.nav-links {
        display: flex;
        position: absolute;
        flex-direction: column;
        background-color: var(--white);
        left: 50%;
        translate: -50% 12rem;
        width: clamp(0rem, 90vw, 25rem);
        border-radius: .25rem;
        padding-block: 2.25rem;
        gap: 1.5rem;
        color: var(--dark-blue);
        scale: 0;
        animation: scale-down linear 100ms forwards
    }

    @keyframes scale-up {
        100% {
            scale: 100%
        }
    }

    @keyframes scale-down {
        0% {
            scale: 100%
        }

        100% {
            scale: 0
        }

    }

    nav>ul.nav-links.active {
        display: flex;
        animation: scale-up cubic-bezier(.18, .89, .32, 1.28) 150ms forwards
    }

    nav>ul.nav-links>li {
        color: var(--dark-blue);

    }

    nav>ul.nav-links>li::before {
        display: none;
    }

    nav>.hamburger-icon {
        display: block;
    }

    .container2 {
        display: grid;
        grid-template-columns: 100%;
        position: relative;
        padding-top: 0;
        overflow: visible;
        height: auto;
    }

    .container2>.wavy-image {
        grid-column: 1 / 2;
        grid-row: 1 / 2;
        position: relative;
        overflow: visible;
        display: flex;
        justify-content: center;
        bottom: 0;
        height: auto;
        width: 100%;
        top: -3.5rem;
        margin-bottom: -5.75rem;
    }

    .container2>.wavy-image img {
        position: static;
        width: 100vw;
        right: 0;
    }

    .container2>.four-phones {
        grid-column: 1 / 2;
        grid-row: 1 / 2;
        position: relative;
        width: 100%;
        left: 0;
        top: -4.5rem;
        margin-bottom: -4.5rem;
    }

    .container2>.four-phones>img {
        width: 100%;
        position: static;
    }

    .container2>.four-phones>img.active {
        display: none;
    }

    .container2>main {
        grid-column: 1 / 2;
        grid-row: 2 / 3;
        top: -1rem;
        margin-bottom: -5.25rem;
        align-items: center;
        width: 100%
    }

    /* I'm just gonna remove the delays for the transition */
    .container3 .grid-item>.benefits-image>img {
        transition: transform ease-out 350ms,
            opacity ease-out .8s !important;
    }

    .container4 .grid-item>main {
        text-align: left;
    }

    footer {
        flex-direction: column;
    }

    footer>.col1 {
        gap: 2rem;
        align-items: center;
    }

    footer>.col1>.socials {
        gap: 1.2rem;
    }

    footer>.col1>.socials svg {
        scale: 115%;
    }

    footer>.col2 {
        margin-right: 0;
    }

    footer>.col2>.footer-links {
        display: grid;
        grid-template-columns: 100%;
        row-gap: .85rem;
        justify-items: center;

    }

    footer>.col2>.footer-links>li {
        width: max-content;
        padding-inline: 1rem;

    }

    footer>.col2>.footer-links>li:nth-child(1) {
        order: 1;
    }

    footer>.col2>.footer-links>li:nth-child(2) {
        order: 4
    }

    footer>.col2>.footer-links>li:nth-child(3) {
        order: 2
    }

    footer>.col2>.footer-links>li:nth-child(4) {
        order: 5
    }

    footer>.col2>.footer-links>li:nth-child(5) {
        order: 3
    }

    footer>.col2>.footer-links>li:nth-child(6) {
        order: 6
    }

    footer>.col3 {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
}